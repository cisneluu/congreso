{"version":3,"sources":["context/AuthContext.js","types/authTypes.js","reducers/AuthReducer.js","img/utl.png","img/Tics.png","pages/Inicio.jsx","components/Navbar.jsx","pages/Editar3.jsx","img/icon.png","components/Card.jsx","pages/ListaParticipantes.jsx","pages/Registro.jsx","routes/AppRouter.jsx","routes/PrivateRouter.jsx","routes/PublicRouter.jsx","routes/LoginRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","authTypes","AuthReducer","state","action","type","payload","log","Inicio","dispatch","useContext","history","useHistory","className","src","logo","alt","onClick","push","logo2","Navbar","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","replace","to","init","participantes","localStorage","getItem","JSON","parse","withRouter","props","useReducer","useState","data","name","defaultValue","nombre","autoComplate","apellidos","correo","twitter","ocupacion","Card","participante","style","width","icon","padding","class","ListaParticipantes","map","Registro","setData","handleChange","e","target","value","useEffect","setItem","stringify","actionAdd","uuid","onChange","handleAdd","reset","alert","AppRouter","exact","path","component","Editar3","PrivateRouter","auth","Component","rest","PublicRouter","LoginRouter","App","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.623031fd.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const authTypes = {\r\n    login: \"login\",\r\n    logout: \"logout\",\r\n};","import { authTypes } from \"../types/authTypes\";\r\n\r\nexport const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"add\":\r\n            return [...state, action.payload] //Hacemos una copia del state y agregamos un action.payload (payload contiene la informaciÃ³n con los nuevos datos)\r\n\r\n        // case \"update\":\r\n        //     return state.filter((actual) => actual-id !== action.payload);\r\n\r\n        case authTypes.login:\r\n            return { log: true };\r\n        case authTypes.logout:\r\n            return { log: false };\r\n        default:\r\n            return state;\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/utl.9dc1deab.png\";","export default __webpack_public_path__ + \"static/media/Tics.50d678a6.png\";","import React, { useContext } from 'react';\r\nimport logo from '../img/utl.png';\r\nimport logo2 from '../img/Tics.png';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { authTypes } from '../types/authTypes';\r\n\r\nconst Inicio = () => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogin = () => {\r\n\r\n        dispatch({type: authTypes.login});\r\n\r\n        history.push(\"/Participantes\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <header >\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n        </header>\r\n        <body>\r\n          <div className=\"container\" >\r\n            <div className=\"row\">        \r\n              <div className=\"col-6 ms-auto text-center\"  >\r\n                <img src={logo} className=\"\" alt=\"logo\"  /> \r\n                <br></br> <br></br> \r\n                <h3 className=\"text-center\" >Congreso de <br></br> TecnologÃ­as de la InformaciÃ³n</h3>\r\n    \r\n                <div className=\"d-grid gap-2 col-2 mx-auto\"> \r\n                  <button type=\"submit\" className=\"btn btn-primary\" onClick={handleLogin}   >\r\n                    Entrar \r\n                  </button>\r\n                </div>              \r\n              </div>\r\n      \r\n              <div className=\"col-6 ms-auto\" >\r\n               <img src={logo2} className=\"\" alt=\"\"  />             \r\n               </div>\r\n            </div>        \r\n          </div>\r\n        </body>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Inicio;\r\n","import React, {useContext} from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { authTypes } from '../types/authTypes';\r\nimport logo2 from '../img/Tics.png';\r\nimport logo from '../img/utl.png';\r\nimport './Estilos.css';\r\n\r\nconst Navbar = () => {\r\n\r\n    //Recuperamos el context y el dispatch para moderlo modificar.\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n\r\n    //Definimos el history usando el hook useHistory\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n       // console.log(history);\r\n\r\n       //Usamos el dispatch para modificar el context y establecer log=true.\r\n      dispatch({type: authTypes.logout});\r\n\r\n       //Usando el mÃ©todo replace del history para reemplazar una ruta por otra.\r\n       history.replace(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n           \r\n            <div className=\"container-fluid\">\r\n                <img  src={logo2} className=\"logo\" />\r\n\r\n                <a className=\"navbar-brand\" href=\"/\"></a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link active\" aria-current=\"page\" onClick={handleLogout} to=\"/\">Inicio</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/Participantes\">Participantes</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/Registro\">Registro</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <img  src={logo} className=\"logo\" />\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useReducer } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { AuthReducer } from '../reducers/AuthReducer';\r\n\r\nconst init = () => {\r\n\r\n    const participantes = localStorage.getItem(\"participantes\");\r\n    return participantes ? JSON.parse(participantes) : [];\r\n}  \r\n\r\n\r\nconst Editar3 = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, [], init);\r\n\r\n    const [data, setData] = useState([]);\r\n    // console.warn(\"props\",props.match.params.id);\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem(\"participantes\"+ props.match.params.id, JSON.stringify(state));\r\n    // }, [state]);\r\n\r\n\r\n    return (\r\n        <form >\r\n               <br></br>   <br></br>   <br></br>\r\n         <div className=\"container-sm col-md-6\">      \r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Nombre:{\" \"}\r\n                <input \r\n                name=\"nombre\"\r\n                defaultValue={data.nombre} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"\r\n               />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Apellidos:{\" \"}\r\n                <input \r\n               \r\n                name=\"apellidos\"\r\n                defaultValue={data.apellidos} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Email:{\" \"}\r\n                <input \r\n                \r\n                name=\"correo\"\r\n                defaultValue={data.correo} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Twitter:{\" \"}\r\n                <input                \r\n                name=\"twitter\" \r\n                defaultValue={data.twitter} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               OcupaciÃ³n:{\" \"}\r\n                <input \r\n                name=\"ocupacion\" \r\n                defaultValue={data.ocupacion} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label> <br></br>\r\n            \r\n            \r\n            <div className=\"mx-1 d-grid gap-2\">\r\n                <button  className=\"update\" className=\"btn btn-success mt-2\">Editar</button>\r\n            </div> \r\n       </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(Editar3);\r\n","export default __webpack_public_path__ + \"static/media/icon.e6a1ed2c.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport icon from '../img/icon.png';\r\n\r\nconst Card = ({ participante} ) =>{\r\n    \r\n\r\n    return (\r\n       \r\n        <div className=\"card mb-3\" style={{ width: 540 }}>                \r\n        <div className=\"row g-0\">\r\n            <div className=\"col-md-3\"><br></br>\r\n            <Link to={\"update/\"+ participante.id} > <img src={icon} className=\"img-fluid rounded-start\" alt=\"...\" style={{ width: 80, padding:10 }}  /></Link>\r\n            </div>                \r\n            <div className=\"col-md-8\">\r\n              <div className=\"card-body\" >\r\n                    <h6 className=\"card-title\">{participante.nombre} {participante.apellidos}</h6>\r\n                   \r\n                   <i class=\"fa fa-twitter\"/> <a href={`https://twitter.com/${participante.twitter}`} className=\"card-text\">{participante.twitter}</a> \r\n                    <h6 className=\"card-title\">{participante.ocupacion}</h6>\r\n                   <br></br>\r\n               \r\n                </div>                     \r\n            </div> \r\n\r\n        </div>\r\n    </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useReducer } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Card from '../components/Card';\r\nimport { AuthReducer } from '../reducers/AuthReducer';\r\n\r\n\r\nconst init = () => {\r\n\r\n    const participantes = localStorage.getItem(\"participantes\");\r\n    return participantes ? JSON.parse(participantes) : [];\r\n} \r\n\r\n\r\n\r\nconst ListaParticipantes = () => {\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, [], init);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleRegister = () => {\r\n\r\n        history.push(\"/Registro\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         <br></br>\r\n        <div className=\"container-sm col-md-6\">    \r\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                    <button onClick={handleRegister} className=\"btn btn-success \">Agregar</button>\r\n                </div>    <br></br>  \r\n     \r\n                <div className=\"row g-0\">\r\n                       \r\n                    {\r\n                         state.map((participante) => (\r\n                            <Card key={participante.id} participante={participante} />\r\n                        ))            \r\n                    }\r\n                 </div>\r\n               \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListaParticipantes;\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { AuthReducer } from '../reducers/AuthReducer';\r\nimport { useHistory } from 'react-router';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst init = () => {\r\n\r\n    const participantes = localStorage.getItem(\"participantes\");\r\n    return participantes ? JSON.parse(participantes) : [];\r\n}  \r\n\r\n\r\n\r\n\r\nconst Registro = () => {\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, [], init);\r\n    const [formView, setformView] = useState(false);\r\n\r\n    //Agregamos un state.\r\n    const [data, setData] = useState({nombre: \"\", apellidos:\"\", correo:\"\", twitter:\"\", ocupacion:\"\" });\r\n    //Desestructurarmos el state\r\n    const {nombre,apellidos, correo, twitter, ocupacion} = data;\r\n\r\n    //MÃ©todo handleChange\r\n    const handleChange = (e) =>{\r\n        //Modificamos el estado\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        \r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"participantes\", JSON.stringify(state));\r\n        }, [state]);\r\n        \r\n\r\n    //Definimos la acciÃ³n para Add.\r\n    const actionAdd = {\r\n        type: \"add\",\r\n        payload: {\r\n            id: uuid(),\r\n            nombre,          \r\n            apellidos,\r\n            correo,\r\n            twitter, \r\n            ocupacion,        \r\n        },\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleAdd = () => {\r\n\r\n\r\n        //Invocamos el dispatch, todos los dispatch tiene una referencia con el reducer a ejecutar, debemos de pasarle un action.\r\n        if(!data.nombre || !data.apellidos || !data.correo || !data.twitter || !data.ocupacion ){\r\n            alert(\"Todos los campos son obligatorios\");\r\n            return;\r\n        }\r\n\r\n        dispatch(actionAdd);\r\n        handleAdd.reset();\r\n\r\n        history.push(\"/Participantes\");\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <form >\r\n               <br></br>   <br></br>   <br></br>\r\n         <div className=\"container-sm col-md-6\">      \r\n            <label className=\"mx-1 d-grid gap-2\">\r\n                Nombre:{\" \"}\r\n                <input \r\n                onChange={handleChange}\r\n                name=\"nombre\"\r\n                 value={nombre} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"\r\n               />\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Apellidos:{\" \"}\r\n                <input \r\n                onChange={handleChange} \r\n                name=\"apellidos\"\r\n                 value={apellidos} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Email:{\" \"}\r\n                <input \r\n                onChange={handleChange} \r\n                name=\"correo\"\r\n                 value={correo} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               Twitter:{\" \"}\r\n                <input \r\n                onChange={handleChange} \r\n                name=\"twitter\" \r\n                value={twitter} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label>\r\n            <label className=\"mx-1 d-grid gap-2\">\r\n               OcupaciÃ³n:{\" \"}\r\n                <input \r\n                onChange={handleChange} \r\n                name=\"ocupacion\" \r\n                value={ocupacion} \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                autoComplate=\"off\"/>\r\n            </label> <br></br>\r\n            <label><input type=\"checkbox\" id=\"cbox1\" value=\"first_checkbox\"/> LeÃ­ y acepto los tÃ©rminos y condiciones</label>\r\n            \r\n            <div className=\"mx-1 d-grid gap-2\">\r\n                <button  onClick={handleAdd} className=\"btn btn-success mt-2\">Guardar</button>\r\n            </div> \r\n       </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Registro;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\n//import Editar from '../pages/Editar';\r\nimport Editar2 from '../pages/Editar2';\r\nimport Editar3 from '../pages/Editar3';\r\nimport ListaParticipantes from '../pages/ListaParticipantes';\r\nimport Registro from '../pages/Registro';\r\n\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/Participantes\" component={ListaParticipantes} />\r\n                <Route exact path=\"/Registro\" component={Registro} />\r\n                {/* <Route exact path=\"/Editar\" component={Editar2} /> */}\r\n                {/* <Route exact path=\"/update/:id\" component={Editar2} /> */}\r\n                <Route exact path=\"/update/:id\" component={Editar3} />\r\n                \r\n                {/*Ruta con parametro (:id) */} \r\n                {/* <Route exact path=\"/character/:id\" component={CharacterScreen} /> */}\r\n\r\n                {/*Con <Redirect/> hacemos que la ruta / nos redirija a /mens*/}\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n//component: Representa el componente que vamos a renderizar.\r\nconst PrivateRouter = ({ auth, component: Component, ...rest }) => {\r\n    return <Route \r\n        {...rest} \r\n        //Protegemos la ruta verificando el valor de auth.\r\n        component={(props) => auth.log ? <Component {...props} /> : <Redirect to=\"/login\" /> }  />\r\n};\r\n\r\nexport default PrivateRouter;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRouter = ({ auth, component: Component, ...rest }) => {\r\n    return  <Route\r\n     {...rest} \r\n     //Protegemos la ruta verificando el valor de auth.\r\n     component={ (props) => !auth.log ? <Component {...props} /> : <Redirect to=\"/\" /> } />\r\n    \r\n};\r\n\r\nexport default PublicRouter;\r\n","import React, { useContext } from 'react';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Inicio from '../pages/Inicio';\r\nimport AppRouter from './AppRouter';\r\nimport PrivateRouter from './PrivateRouter';\r\nimport PublicRouter from './PublicRouter';\r\n\r\nconst LoginRouter = () => {\r\n\r\n    //Recuperamos el context mediante el hook useContext para asÃ­ poder saber si el usuario esta autenticado o no.\r\n    const { log } = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <Router>\r\n         { /*  <AppRouter/>*/}\r\n            {/*  <Route exact path=\"/login\" component={LoginScreen} />*/}\r\n            <Switch>              \r\n               <PublicRouter path=\"/login\" auth={log} component={Inicio} />\r\n               <PrivateRouter path=\"/\" auth={log} component={AppRouter} />\r\n            </Switch>\r\n            \r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default LoginRouter;\r\n","import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { AuthReducer } from './reducers/AuthReducer';\nimport LoginRouter from './routes/LoginRouter';\n\n//Definimos la funciÃ³n init, para intentar recuperar el estado log desde el localstorage.\nconst init = () => {\n  return JSON.parse(localStorage.getItem('log')) || {log: false}\n};\n\nconst App = () => {\n\n  //Definimos el context para toda la aplicaciÃ³n mediante el hook useContext.\n  const [log, dispatch] = useReducer(AuthReducer, {}, init);\n\n//Definimos un useEffect para persistir el estado del log\nuseEffect(() => {\n  localStorage.setItem('log', JSON.stringify(log));\n}, [log])\n\n//Usamos <AuthContext.Provider> para proveer el contexto a toda la aplicaciÃ³n\n  return (\n    <AuthContext.Provider value ={{log, dispatch}}>\n      <LoginRouter/> \n    </AuthContext.Provider>\n\n    \n  );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}